@using static QuickProFixer.ViewModels.FSRequestViewModel;
@model QuickProFixer.ViewModels.RequestTemplateViewModel

<div class="row">
    
    <div class="col-12">
        <br />
        <h4>Details of Request with associated Quotes</h4>
        <br/>
            <div class="col float-start w-100">
                <img style="width: 200px; height: 200px; object-fit:contain" src="~/UsersProfile/@Model.ClientImgUrl" alt="Client Image"/>
            </div>

            <div class="col badge text-black card-title">
                <h2>@Model.Title</h2>
            </div>
            <div class="col">
                <span>@Model.Description</span>
            </div>

            <br/>

             <div class="col card-text">
               <span class="badge text-black">Name of Client:</span> @Model.ClienteleFirstName  @Model.ClienteleLastName
            </div>
            <div class="col card-text">
               <span class="badge text-black">Location of the Fix Request:</span> @Model.Address
            </div>  
            <div class="col card-text">
               <span class="badge text-black">Date of Requested:</span> @Model.DateSummited.ToShortDateString()
            </div>
            <div class="col card-text">
               <span class="badge text-black">Possible start Date:</span> @Model.Urgency
            </div>
            
            <div class="col card-text">
               <span class="badge text-black">This Request Notification was sent to:</span> @Model.SentNotisficationCount Fixers
            </div>

             <div class="col card-text">
               <span class="badge text-black">Total Response Count for this Request:</span> @Model.QuotesCount
            </div>

            <div class="col card-text">
               <span class="badge text-black">Clientele Rating:</span> @Model.RatingScore
            </div>
        
            <br />

           @* Attached resouces section*@
            <h3>Attached Resources</h3>
             <hr/>
            <div class="row">
                @if(Model.ImgUrl_1 != null){
                    <div class="col">
                       <img class="card-img-top" style="width: 100px; height: 100px; object-fit:contain" 
                       src="~/RequestImages/@Model.ImgUrl_1" alt="Client Image"/>
                   
                   <div class="col">
                     <a class="card-link" href="~/RequestImages/@Model.ImgUrl_1">view Image Now</a> 
                   </div>
                   </div>
                }
                @if(Model.ImgUrl_2 != null){
                    <div class="col">
                       <img class="card-img-top" style="width: 100px; height: 100px; object-fit:contain" 
                       src="~/RequestImages/@Model.ImgUrl_2" alt="Client Image"/>
                   

                    <div class="col">
                       <a class="card-link" href="~/RequestImages/@Model.ImgUrl_2">view Image Now</a>
                    </div>
                    </div>
                }            
                @if(Model.ImgUrl_3 != null){
                    <div class="col">
                       <img class="card-img-top" style="width: 100px; height: 100px; object-fit:contain" 
                       src="~/RequestImages/@Model.ImgUrl_3" alt="Client Image"/>
                    
                     <div class="col">
                       <a class="card-link" href="~/RequestImages/@Model.ImgUrl_3">view Image Now</a>
                    </div>
                    </div>
                }
            </div>

            <br/>
            <div class="row">
                @if(Model.AudioUrl != null){ 
                    <div class="col">
                       <a class="card-link" href="~/RequestAudio/@Model.AudioUrl">Download Audio Now</a>
                    </div>
                }

                @if(Model.VideoUrl != null){               
                    <div class="col">
                       <a class="card-link" href="~/RequestVideos/@Model.VideoUrl">Download Video now</a>
                    </div>
                }

                @if(Model.PdfUrl != null){               
                     <div class="col">
                       <a class="card-link" href="~/RequestPDF/@Model.PdfUrl">Download Pdf Now</a>
                    </div>
                }
            </div>

            <br/>  
    </div>   
        
    <br />
    <br />



    @* Quotes section*@
    <h4 class="bg-black bg-opacity-75 fw-bold  text-white"> Received Quotes</h4>
         
        <div class="container-fluid">

            @{
           
                if(Model.QuoteMiniTemplateViewModels.Count() > 0)
                {
                    foreach (var quotes in Model.QuoteMiniTemplateViewModels)
                    {
                        Model.Flags = ResponseCode.ClienteleMarksFixAsActive;

                        <div id="@quotes.sentNotificationId" class="col bg-light bg-opacity-50">
                            @await Html.PartialAsync("_QuoteMiniPartial", quotes)

                        @{
                            if(Model.IsContracted == false)
                            {
                                <div class="col float-end">
                                    <a class="btn btn-link" id="AcceptQuoteBtn" onclick="AcceptQuoteOnClick(@quotes.sentNotificationId, @quotes.FixerId, @quotes.RequestId, @quotes.QuoteId)">  Accept Quote</a>
                                </div>
                            }

                         }


                            <div class="col float-end">
                                <a class="btn btn-link" asp-controller="FixerSpace" asp-action="QuotePreview" asp-route-QuoteId="@quotes.QuoteId"> View Details </a>
                            </div>

                            <br />
                            <hr />
                    </div>
                }
            }
            else
            {
                <h5> No Quote have received for this request</h5>
            }
        }
        </div>


    @* SentNotification section*@
    <h4 class="bg-black bg-opacity-75 text-white">Awaiting Quotes from the following Fixers</h4>
    
    <div class="container-fluid">

        @{

            if (Model.sentNotifications.Count() > 0)
            {
                foreach (var fixer in Model.FixerMiniTemplateViewModels)
                {

                    <div class="col bg-light bg-opacity-50">
                        <div class="row">
                            <div class="col-1">
                                <img style="max-width:80px; max-height:60px" src="@fixer.FixerImgUrl" alt="Profile Image" />
                            </div>
                            <div class="col-10">
                                <div class="col badge text-black"><h4>@fixer.FullName</h4></div>
                                <div class="col card-body">
                                    <span>@fixer.ShortDescription</span>
                                </div>
                                <div class="col card-text">
                                    <span class="badge text-black">Rating:</span> @Model.RatingScore
                                </div>
                                <div class="col card-text">
                                    <span class="badge text-black">Completed Fixes:</span> @fixer.NoOfCompletedFixes
                                </div>
                                <div class="col card-text">
                                    <span class="badge text-black">Address:</span> @fixer.Location
                                </div>

                                <br />
                                <div class="col float-end">
                                    <a class="btn-link" asp-controller="FixerSpace" asp-action="FixerDetails" asp-route-FixerId="@fixer.FixerId">view more details about @fixer.FirstName</a>
                                </div>

                            </div>

                        </div>
                        <hr />
                    </div>
                }
            }
            {
                <h5> All quotes have be received </h5>
            }
        }
    </div>


 </div>

<script>


    function AcceptQuoteOnClick(SentNotificationId, fixerId, RequestId, QuoteId) {
       
        var flag = @Html.Raw(Json.Serialize(Model.Flags));
        var msg = "You have successfully Accepted this Request!!! It can now be viewed under Active Requests"



        var flagsStringify = JSON.stringify(flag);

        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "/api/ClienteleSpace/" + SentNotificationId + "/" + fixerId + "/" + flagsStringify + "/" + msg + "/" + RequestId + "/" + QuoteId, true);
        xhttp.setRequestHeader('Content-Type', 'application/json');
        xhttp.send();

        xhttp.onloadend = function () {
            if (this.readyState == 4 && this.status == 200) {
                var response = JSON.parse(this.responseText);
                alert(response);

                //var div = document.getElementById(SentNotificationId);
                //div.parentNode.removeChild(div)

                // $(this).classList.add('disabled')
                document.querySelector('#AcceptQuoteBtn').classList.add('disabled')
            }
        }
    }
</script>

