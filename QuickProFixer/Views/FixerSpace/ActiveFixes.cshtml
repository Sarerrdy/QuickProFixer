@using static QuickProFixer.ViewModels.FSRequestViewModel;
@model QuickProFixer.ViewModels.FSRequestViewModel



<h3 class="text-center">Welcome @Model.FixerName to your Fixer Space</h3>
<br />

<h2> Active Fixes </h2>

<hr />
<br />
<h5>@Model.ErrorMsg</h5>

<div class="container-fluid">
    @{
        //set ResponseCode Flag
        Model.Flags = ResponseCode.FixerMarksAsCompleted;

        @foreach (var request in @Model.RequestMiniTemplateViewModels)
        {

            <div id="@request.SentNotificationId" class="col bg-light bg-opacity-50">
                @await Html.PartialAsync("_RequestThumbPartial", request)

              
                <div class="col float-end">
                    <a class="btn btn-link" asp-controller="FixerSpace" asp-action="QuotePreview" asp-route-QuoteId="@request.QuoteId"> View Details</a>
                </div>
               
                    <div class="col float-end">
                        <a class="btn btn-link" id="ActiveFixesBtn" onclick="MarkAsCompletedOnClick(@request.SentNotificationId)"> Mark as completed</a>
                    </div>               
               
                <br/>
                <hr />               
            </div>
        }

        @Html.HiddenFor(m => m.Flags, new { id = Model.Flags })
        @Html.HiddenFor(m => m.FixerId, new { id = Model.FixerId })
    }

</div>

<script>


    function MarkAsCompletedOnClick(SentNotificationId) {
        
        var fixerId = @Html.Raw(Json.Serialize(Model.FixerId));
        var flag = @Html.Raw(Json.Serialize(Model.Flags));
        var msg = "You have successfully marked this fix as completed...Please do note that your Clientele MUST also mark this fix as completed"


        var flagsStringify = JSON.stringify(flag);

        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "api/FixerSpace/" + SentNotificationId + "/" + fixerId + "/" + flagsStringify + "/" + msg, true);
        xhttp.setRequestHeader('Content-Type', 'application/json');
        xhttp.send();

        xhttp.onloadend = function () {
            if (this.readyState == 4 && this.status == 200) {
                var response = JSON.parse(this.responseText);
                alert(response);

                var div = document.getElementById(SentNotificationId);
                div.parentNode.removeChild(div)

                // $(this).classList.add('disabled')
                // document.querySelector('#RejectRequestBtn').classList.add('disabled')
            }
        }
    }
</script>